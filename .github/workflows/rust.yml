name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "*" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CODE_COV_VAL: '0'

    steps:
    - name: Clone main repository
      uses: actions/checkout@v4

    - uses: moonrepo/setup-rust@v1
      with:
        components: rustfmt
        cache: false
      name: Setup Rust Toolchain

    - uses: Swatinem/rust-cache@v2
      name: Cache Rust Dependencies

    - run: export RUSTFLAGS="-D warnings" && cargo build
      name: Run build scripts

    - name: Check Format
      run: cargo fmt --check
      working-directory: .

    # - name: Run Tests
    #   run: cargo test --verbose --lib
    #   working-directory: .

    - name: Install dependencies
      run: sudo apt-get install -y musl-tools

    - name: Install tarpaulin
      run: cargo install cargo-tarpaulin

    - name: Run tests with coverage
      run: |
        cargo tarpaulin --lib --out Html --output-dir target/debug/tarpaulin/ -- --nocapture > test.log
        LAST_LINE=$( tail -n 1 test.log)
        CODE_COV=$(echo "$LAST_LINE" | cut -d '%' -f 1)
        echo "CODE_COV: $CODE_COV"
        COLOR=$(
          float=$(echo "$CODE_COV" | bc)
          threshold=80.0
          if (( $(echo "$float > $threshold" | bc -l) )); then
              echo "brightgreen"
          else
              echo "yellow"
          fi
        )
        echo "COLOR: $COLOR"
        SVG_CONTENT=$(cat <<EOF
<?xml version="1.0" encoding="UTF-8"?>
<svg xmlns="http://www.w3.org/2000/svg" width="100" height="20">
  <rect width="100" height="20" rx="3" fill="#555"/>
  <rect x="40" width="60" height="20" rx="3" fill="${COLOR}"/>
  <text x="50%" y="50%" alignment-baseline="middle" text-anchor="middle" fill="#fff" font-size="11" font-family="Verdana">Coverage ${CODE_COV}%</text>
</svg>
EOF
)
        echo "$SVG_CONTENT" > ./target/debug/tarpaulin/coverage-badge.svg

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./target/debug/tarpaulin/
        publish_branch: gh-pages